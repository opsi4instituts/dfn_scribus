; Copyright (c) uib gmbh (www.uib.de)
; This sourcecode is owned by uib gmbh
; and published under the Terms of the General Public License.
; credits: http://www.opsi.org/en/credits/

[Actions]
; common Values for (un)installation
include_insert "common.opsiinc"

if not(HasMinimumSpace ("%SystemDrive%", $MinimumSpace$))
	LogError "Not enough space on %SystemDrive%, " + $MinimumSpace$ + " on drive %SystemDrive% needed for " + $ProductId$
	isFatalError
	; Stop process and set installation status to failed
else
	if FileExists("%ScriptPath%\delsub64.opsiscript")
		comment "Start uninstall sub section"
		Sub "%ScriptPath%\delsub64.opsiscript"
	endif
	
	
	if ($INST_SystemType$ = "64 Bit System") and (($INST_architecture$ = "system specific") or ($INST_architecture$ = "both") or ($INST_architecture$ = "64 only"))
		if not ($MSVersion$ = "6.1")
			Logwarning "Only tested with windows 7! Please report to the maintainer successful installation on other windows versions."
		endif

		Message "Installing " + $ProductName$ + " 64 Bit..."
		comment "Start setup program"
		Winbatch_install
		Sub_check_exitcode
		
		comment "Test for installation success"
		
		Set $SearchPattern$ = $ProductName$
		; Parameter: $SearchPattern$ Suchbegriff in Registry
		Sub_search_registry64_uninstall_keys
		; Rückgabewert: $ResultList$ gefundene Einträge

		if ( count ($ResultList$) = "0" )
			logError "Fatal: After Installation " + $ProductName$ + " could not be found in " + $RegPathUninstall$
			isFatalError
		else
			comment "Successful Installation"
			for %s% in $ResultList$ do Sub_get_pathtoexe_from_registry_64
		
			comment "include custom post install file"
			set $CustomPostInstall$ = getProductProperty("custom-post-install","none")
			if not ($CustomPostInstall$ = "none")
				if FileExists("%ScriptPath%\custom\" + $CustomPostInstall$)
					include_insert "%ScriptPath%\custom\" + $CustomPostInstall$
				endif
			endif
		endif
	else
		LogError "At the moment a 32 bit version is not included in this packet!"
		isFatalError
	endif	
endif

[Sub_get_pathtoexe_from_registry_64]
Set $RegId$ = "%s%"
Set $PathToExe$ = GetRegistryStringValue64("[" + $RegPathUninstall$ + "\" + $RegId$ + "] DisplayIcon")

set $DesktopIcon$ = getProductProperty("desktopicon","no")
if $DesktopIcon$ = "no"
	comment "delete the automatically appearing desktopicon"
	Linkfolder_uninstall_desktopicon
endif

[Winbatch_install]
; === Nullsoft Scriptable Install System ================================================================
"%ScriptPath%\$SetupFile$" /S

[Linkfolder_uninstall_desktopicon]
set_basefolder common_desktopdirectory
set_subfolder ""
delete_element $RegId$

